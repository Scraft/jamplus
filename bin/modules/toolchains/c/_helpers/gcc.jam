{
	local SUFOBJ = .o ;
	SUFEXE on $(C.COMPILER_SUITE_SYMBOL) = "" ;
	SUFLIB on $(C.COMPILER_SUITE_SYMBOL) = .a ;
	SUFMODULE on $(C.COMPILER_SUITE_SYMBOL) = .so ;
	SUFLINKLIBS on $(C.COMPILER_SUITE_SYMBOL) = .a .so ;
	SUFOBJ on $(C.COMPILER_SUITE_SYMBOL) = $(SUFOBJ) ;
	SUFSHAREDLIB on $(C.COMPILER_SUITE_SYMBOL) = .so ;

	NOARSCAN on $(C.COMPILER_SUITE_SYMBOL) = true ;
	NOARUPDATE on $(C.COMPILER_SUITE_SYMBOL) = true ;

	C.BUILD_EXTENSIONS on $(C.COMPILER_SUITE_SYMBOL) = $(SUFOBJ) ;
	C.AddBuildExtensions CC : .c .s : C.gcc.CC : $(SUFOBJ) "" : 1 1 0 : 1 ;
	C.AddBuildExtensions C++ : .cc .cpp .cxx : C.gcc.C++ : $(SUFOBJ) "" : 1 0 1 : 1 ;
	C.AddBuildExtensions M : .m : C.gcc.CC : $(SUFOBJ) "" : 1 1 0 : 1 ;
	C.AddBuildExtensions MM : .mm : C.gcc.C++ : $(SUFOBJ) "" : 1 0 1 : 1 ;
	C.AddBuildExtensions PCH : .h .pch : C.gcc.PCH : "" .gch ;

	PCHCCFLAGS on $(C.COMPILER_SUITE_SYMBOL) = -x c-header ;
	PCHC++FLAGS on $(C.COMPILER_SUITE_SYMBOL) = -x c++-header ;
	PCHMFLAGS on $(C.COMPILER_SUITE_SYMBOL) = -x objective-c-header ;
	PCHMMFLAGS on $(C.COMPILER_SUITE_SYMBOL) = -x objective-c++-header ;

	STDHDRS on $(C.COMPILER_SUITE_SYMBOL) = /usr/include ;

	C.Flags * : CC	: -x c ;
	C.Flags * : C++	: -x c++ ;
	C.Flags * : M	: -x objective-c ;
	C.Flags * : MM	: -x objective-c++ ;

	local COMPILER_BIN_PATH = $(COMPILER_BIN_PATH:Z=$(C.COMPILER_SUITE_SYMBOL)) ;
	C.CC on $(C.COMPILER_SUITE_SYMBOL) = $(COMPILER_BIN_PATH)/gcc ;
	C.C++ on $(C.COMPILER_SUITE_SYMBOL) = $(COMPILER_BIN_PATH)/g++ ;
	C.LINK on $(C.COMPILER_SUITE_SYMBOL) = $(COMPILER_BIN_PATH)/g++ ;
	C.AR on $(C.COMPILER_SUITE_SYMBOL) = $(COMPILER_BIN_PATH)/ar ru ;
	C.RANLIB on $(C.COMPILER_SUITE_SYMBOL) = $(COMPILER_BIN_PATH)/ranlib ;

	C._C++Exceptions on $(C.COMPILER_SUITE_SYMBOL) = C.gcc-shared._C++Exceptions ;
	C._LinkPrebuiltLibraries on $(C.COMPILER_SUITE_SYMBOL) = C.gcc-shared._LinkPrebuiltLibraries ;
	C._MultiCppCompile_SetupFlags on $(C.COMPILER_SUITE_SYMBOL) = C.gcc-shared._MultiCppCompile_SetupFlags ;
	C._RuntimeTypeHelper on $(C.COMPILER_SUITE_SYMBOL) = C.gcc-shared._RuntimeTypeHelper ;
	C._SharedLibraryFromObjects_ExportLib on $(C.COMPILER_SUITE_SYMBOL) = C.gcc-shared._SharedLibraryFromObjects_ExportLib ;
	C._SharedLibraryFromObjects_LinkFlags on $(C.COMPILER_SUITE_SYMBOL) = C.gcc-shared._SharedLibraryFromObjects_LinkFlags ;
}

{
	switch $(OS) {
		case CYGWIN :
			Defines * : __cygwin__ ;
			C.CC		?= gcc ;
			C.C++		?= g++ ;
			JAMSHELL	?= sh -c ;
			C.RANLIB	?= "" ;
			SUFEXE		= .exe ;
	}
}

if ! $(TARGETINFO_LOCATE) {

rule C.gcc.FDefines { return -D$(<) ; }
rule C.gcc.FIncludes { return -I$(<) ; }
rule C.gcc.FLibraryPaths { return -L$(<) ; }


rule C.gcc._LinkPrebuiltLibraries {
	C.gcc-shared._LinkPrebuiltLibraries ;
}


actions updated together piecemeal C.gcc.Archive {
	"$(C.AR)" $(LIBFLAGS) $(<:C) $(>:C)
}


actions updated together piecemeal C.gcc.Archive2 {
	"$(C.AR)" $(LIBFLAGS) -static -o $(<:C) $(>:C)
}


actions C.gcc.Link {
	"$(C.LINK)" -o $(<[1]:C) $(>:C) $(NEEDLIBS:TC) $(LINKLIBS:TC) $(LINKFLAGS)
}


actions together C.gcc.Ranlib {
	"$(C.RANLIB)" $(<:C)
}


#
# NOARUPDATE - can't update an archive
#

if $(NOARUPDATE) {
	actions C.gcc.Archive {
		"$(C.AR)" $(LIBFLAGS) $(<:C) $(>:C)
	}

	actions C.gcc.Archive2 {
		"$(C.AR)" -static $(LIBFLAGS) -o $(<:C) $(>:C)
	}
}


actions updated response C.gcc.CC {
	"$(C.CC)" -c $(MFLAGS) $(>:C)
}


actions updated response C.gcc.C++ {
	"$(C.C++)" -c $(MFLAGS) $(>:C)
}


actions updated response C.gcc.PCH {
	"$(C.C++)" -c $(MFLAGS) $(>:C)
}


rule C.gcc._C++Exceptions {
	C.gcc-shared._C++Exceptions ;
}


rule C.gcc._RuntimeTypeHelper {
	C.gcc-shared._RuntimeTypeHelper ;
}


rule C.gcc._MultiCppCompile_SetupFlags {
	C.gcc-shared._MultiCppCompile_SetupFlags ;
}


rule C.gcc._SharedLibraryFromObjects_ExportLib {
	C.gcc-shared._SharedLibraryFromObjects_ExportLib ;
}


rule C.gcc._SharedLibraryFromObjects_LinkFlags {
	C.gcc-shared._SharedLibraryFromObjects_LinkFlags ;
}

} # TARGETINFO_LOCATE

