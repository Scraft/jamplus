C.AR		?= "$(BADA_SDK_HOME)\\Tools\\Toolchains\\ARM\\bin\\arm-samsung-nucleuseabi-ar" ru ;
C.CC		?= "$(BADA_SDK_HOME)\\Tools\\Toolchains\\ARM\\bin\\arm-samsung-nucleuseabi-gcc" ;
C.C++		?= "$(BADA_SDK_HOME)\\Tools\\Toolchains\\ARM\\bin\\arm-samsung-nucleuseabi-g++.exe" ;
C.LINK		?= "$(BADA_SDK_HOME)\\Tools\\Toolchains\\ARM\\bin\\arm-samsung-nucleuseabi-g++.exe" ;
C.RANLIB	?= "$(BADA_SDK_HOME)\\Tools\\Toolchains\\ARM\\bin\\arm-samsung-nucleuseabi-ranlib.exe" ;

######################################################################################################################

rule C.FDefines { return -D$(<) ; }
rule C.FIncludes { return -I\"$(<)\" ; }
rule C.FLibraryPaths { return -L\"$(<)\" ; } 

######################################################################################################################

if $(PLATFORM) != bada1 && $(PLATFORM) != bada2
{
	Exit *** Error \: Expected PLATFORM to be bada1 or bada2 not $(PLATFORM) ;
}

######################################################################################################################

# Will need to end up with multiple platform configs, but for now.

BADA_TARGET = HVGA ;	# Wave M
BADA_TARGET = WVGA ;	# Wave 3

# -------------------------------------------------------------------------------------
# Defines
# -------------------------------------------------------------------------------------
# Generic
# -------------------------------------------------------------------------------------

C.Defines *	: 
	_BADA 
	SHP 
	BUILD_DLL 
	EA_PLATFORM_BADA
	TCHAR=char
	;
	
C.Defines * : _BADA1_SDK : * : bada1 ;
C.Defines * : _BADA2_SDK : * : bada2 ;
	
# -------------------------------------------------------------------------------------
# Debug
# -------------------------------------------------------------------------------------

C.Defines * : 
	_DEBUG 
: debug ;

# -------------------------------------------------------------------------------------
# Compiler flags
# -------------------------------------------------------------------------------------

local _compilerFlags =
	-Wno-deprecated
	-g 
	-fpic
	-fmessage-length=0
	-Wno-psabi	# Get rid of the mangling of 'va_list' has changed in GCC 4.4
	-fsigned-char
	-fshort-wchar
	-ffunction-sections 
	-fdata-sections 
	-fvisibility=hidden 
	-Wa,--noexecstack
	-Wreturn-type 
	-ffast-math
	-finline-small-functions	
	;
	
if $(PLATFORM) = bada1
{
	_compilerFlags += 	
		-mcpu=cortex-a8
		-mfpu=vfpv3
		-mfloat-abi=hard
		-mlittle-endian
		-marm
		;		
}
else if $(PLATFORM) = bada2
{
	if $(BADA_TARGET) = HVGA
	{
		_compilerFlags += 	
			-marm 
			-mfpu=vfp 
			-mfloat-abi=softfp 
			;
	}
	else if $(BADA_TARGET) = WVGA
	{
		_compilerFlags += 
			-marm 
			-march=armv7-a
			-mfpu=vfpv3
			-mfloat-abi=hard
			;
	}
}
	
if $(CONFIG) = debug
{
	_compilerFlags += -O0 ;
}
else
{
	_compilerFlags += 
		-fno-omit-frame-pointer 
		-funswitch-loops
		-finline-limit=300
		-Os 
		;
}

C.CFlags *		: $(_compilerFlags) ;
C.C++Flags *	: $(_compilerFlags) ;

# -------------------------------------------------------------------------------------
# Include directories
# -------------------------------------------------------------------------------------

C.IncludeDirectories * : 
	$(BADA_SDK_HOME)/include 
	;

# -------------------------------------------------------------------------------------
# C.LinkDirectories
# -------------------------------------------------------------------------------------

if $(PLATFORM) = bada1
{
	BADA_MODEL = Wave_LP1 ;
}
else if $(PLATFORM) = bada2
{
	if $(BADA_TARGET) = HVGA
	{
		BADA_MODEL = WaveHVGA ;
	}
	else if $(BADA_TARGET) = WVGA
	{
		BADA_MODEL = WaveWVGA ;
	}
}

C.LinkDirectories * : $(BADA_SDK_HOME)/Model/$(BADA_MODEL)/Target ;
	
if $(PLATFORM) = bada1
{
	C.LinkDirectories * : 
		$(BADA_SDK_HOME)/Tools/Toolchains/ARM/lib/gcc/arm-samsung-nucleuseabi/4.4.1
		$(BADA_SDK_HOME)/Tools/Toolchains/ARM/arm-samsung-nucleuseabi/lib
		;
}

# -------------------------------------------------------------------------------------
# LinkPrebuiltLibraries
# -------------------------------------------------------------------------------------

C.LinkPrebuiltLibraries * :
	$(BADA_SDK_HOME)/Model/$(BADA_MODEL)/Target/osp_rt0.a 
	$(BADA_SDK_HOME)/Model/$(BADA_MODEL)/Target/FOsp.so 
	$(BADA_SDK_HOME)/Model/$(BADA_MODEL)/Target/FGraphicsOpengl.so 
	$(BADA_SDK_HOME)/Model/$(BADA_MODEL)/Target/FGraphicsEgl.so 
	$(BADA_SDK_HOME)/Model/$(BADA_MODEL)/Target/StubDynCast.so 
	;
	
if $(PLATFORM) = bada1
{
	C.LinkPrebuiltLibraries * :
		c-newlib 
		m-newlib
		stdc++
		gcc_s
		;
}
# -------------------------------------------------------------------------------------
# LinkFlags
# -------------------------------------------------------------------------------------
# Generic
# -------------------------------------------------------------------------------------

C.LinkFlags * :
#	--enable-auto-import
	-shared 
	-Wl,--no-undefined	
	-fsigned-char	
	-Wl,--gc-sections
#	-Wl,--strip-all	
	;
	
if $(PLATFORM) = bada1
{
	C.LinkFlags * :	
		-nostdlib 
		-mcpu=cortex-a8
		-mfpu=vfpv3
		-mfloat-abi=hard
		-mlittle-endian
		-marm
		;		
}
else if $(PLATFORM) = bada2
{	
	if $(BADA_TARGET) = HVGA	
	{
		C.LinkFlags * :
			-marm 
			-mfpu=vfp 
			-mfloat-abi=softfp 
			;
	}
	else if $(BADA_TARGET) = WVGA
	{
		C.LinkFlags * :
			-marm 
			-march=armv7-a 
			-mfpu=vfpv3 
			-mfloat-abi=hard
			;
	}
}

# -------------------------------------------------------------------------------------
# Misc
# -------------------------------------------------------------------------------------
# Generic
# -------------------------------------------------------------------------------------

VSPLATFORMMAP.bada1 = "Bada SDK 1" ;
VSPLATFORMMAP.bada2 = "Bada SDK 2" ;
