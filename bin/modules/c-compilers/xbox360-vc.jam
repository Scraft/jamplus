MSVCBIN			?= "$(XEDK)/bin/win32/" ;
MSVCNT_BIN_PATH ?= $(MSVCBIN) ;
C.AR			= "$(MSVCBIN)lib" ;
C.CC			= "$(MSVCBIN)cl" ;
C.C++			= "$(MSVCBIN)cl" ;
C.LINK			= "$(MSVCBIN)link" ;
C.STDHDRS		?= "$(MSSDK_STDHDRS)" ;
C.STDLINKDIRECTORIES ?= "$(MSSDK_LINKDIRECTORIES)" ;

C.Defines * : _XBOX : : xbox360 ;
C.Defines * : _CRT_SECURE_NO_DEPRECATE _CRT_SECURE_NO_WARNINGS _CRT_NONSTDC_NO_DEPRECATE : : xbox360 ;

rule ImageXex TARGET
{
	TARGET = [ _retrieveActiveTargetName $(TARGET) ] ;
	local grist = $(TARGET) ;
	local _t ;
	on $(TARGET) _t = $(LINK_TARGET) ;
	local xex = $(_t:S=.xex) ;
	MakeLocate $(xex) : $(LOCATE_TARGET) ;
	Depends $(TARGET) : $(xex) : $(_t) ;
	Clean clean:$(TARGET) : $(xex) $(xex:S=.pe) $(xex:S=.xdb) ;
	ImageXex1 $(xex) : $(_t) ;
}

actions ImageXex1
{
	"$(XEDK)/bin/win32/imagexex" /out:"$(1)" /nologo "$(2)"
}

rule DeployXexHelper
{
	local xex ;
	on $(TARGET) xex = $(LINK_TARGET:S=.xex) ;
		
	local deployLocation ;
	on $(xex) deployLocation = $(DEPLOY_LOCATION) ;
		
	if $(deployLocation)
	{
		DEPLOY_LOCATION on $(xex) = $(deployLocation) ;
		DeployXex_ $(xex) ;
	}
	
	##################################################
	
	local exe ;
	on $(TARGET) exe = $(LINK_TARGET:S=.exe) ;
		
	if $(deployLocation)
	{
		DEPLOY_LOCATION on $(exe) = $(deployLocation) ;
		DeployXex_ $(exe) ;
	}
	
}

actions DeployXex_
{
	"$(XEDK)/bin/win32/xbecopy.exe" $(1:C\\) "$(DEPLOY_LOCATION)$(1:BS)" /nologo
}

rule C._ApplicationFromObjects_PostBuild
{
	ImageXex $(TARGET) ;
	DeployXexHelper $(TARGET) ;
}

rule C.DeployXex TARGET : DEPLOY_LOCATION
{
	TARGET = [ _retrieveActiveTargetName $(TARGET) ] ;
	DEPLOY_LOCATION on $(TARGET) = $(DEPLOY_LOCATION) ;
}

rule C.Xbox360DeployToolSettings TARGET : REMOTE_ROOT : DEPLOYMENT_TYPE : DEPLOYMENT_FILES
{
	Project.MakefileTool $(TARGET) : VCX360DeploymentTool : RemoteRoot : $(REMOTE_ROOT) ;
	Project.MakefileTool $(TARGET) : VCX360DeploymentTool : DeploymentFiles : $(DEPLOYMENT_FILES:E="") ;
	Project.MakefileTool $(TARGET) : VCX360DeploymentTool : DeploymentType : $(DEPLOYMENT_TYPE:E=0) ;
}

VSPLATFORMMAP.xbox360 = "Xbox 360" ;
VSNATIVEPLATFORM.xbox360 = 1 ;
