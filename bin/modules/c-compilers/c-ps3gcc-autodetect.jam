PS3_GCC_COMPONENTS_FOUND = 0 ;

rule FindPs3GccCompiler
{
	PS3_GCC_GCC	= [ Glob $(PS3_PPU_BIN_PATH) : ppu-lv2-gcc.exe ] ;
	PS3_GCC_G++	= [ Glob $(PS3_PPU_BIN_PATH) : ppu-lv2-g++.exe ] ;
	PS3_GCC_LD	= [ Glob $(PS3_PPU_BIN_PATH) : ppu-lv2-ld.exe ] ;
	
	if ! $(PS3_GCC_GCC)
	{
		Echo PS3 \: GCC \: Could not find GCC compiler ;
		return ;
	}
	
	if ! $(PS3_GCC_G++)
	{
		Echo PS3 \: GCC \: Could not find G++ compiler ;
		return ;
	}
	
	if ! $(PS3_GCC_LD)
	{
		Echo PS3 \: GCC \: Could not find LD linker ;
		return ;
	}
	
	PS3_GCC_COMPONENTS_FOUND = 1 ;
}

rule C.AutoDetect 
{
	FindPs3GccCompiler ;

	if ! ( $(PS3_GCC_COMPONENTS_FOUND) = 1 )
	{
		Echo PS3 \: GCC \: Could not find PS3 GCC tool chain ;
		return ;
	}

	COMPILER.$(PLATFORM) = ps3gcc ;

	# Use generic gcc module.
	UseModule c-compilers/c-gcc ;

	UseModule c-compilers/c-ps3gcc ;
	if $(PLATFORM) != *  &&  $(CONFIG) != * {
		UseModule c-compilers/ps3-gcc ;
	}

	return $(COMPILER.$(PLATFORM)) ;
}
