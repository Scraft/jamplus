if ! $(TARGETINFO_LOCATE)
{

switch $(COMPILER)
{
	case vs2005 :
		local binPath = @($(MSVCNT)/../Common7/Tools/Bin:R=) ;
		LINK_PATHS += $(binPath) ;
		MIDL = "$(binPath)/Midl" ;

	case vs2008 :
		LINK_PATHS += $(MSSDK)/bin ;
		MIDL = "$(MSSDK)/bin/midl" ;
}

MIDLFLAGS.debug on * = /D "_DEBUG" /char signed /env win32 /Oicf ;
MIDLFLAGS.release on * = /D "NDEBUG" /char signed /env win32 ;

# OPTIONS = proxy ;
rule MidlFlags PARENT : BASE_NAME : OPTIONS
{
	BASE_NAME = $(BASE_NAME:L) ;
	BASE_NAME = $(BASE_NAME:G=<$(PARENT)>) ;
	local tlbFile = $(BASE_NAME:S=.tlb) ;
	local hFile = $(BASE_NAME:S=.h) ;
	local iidFile = $(BASE_NAME:S=_i.c) ;
	local proxyFile = $(BASE_NAME:S=_p.c) ;
	local targets ;

	if ! ( postmidl in $(OPTIONS) )
	{
		targets += $(tlbFile) $(hFile) $(iidFile) ;
		if proxy in $(OPTIONS)
		{
			targets += $(proxyFile) ;
		}
		MakeLocate $(targets) : $(LOCATE_TARGET) ;

		local flags ;
		on $(PARENT) flags += $(MIDLFLAGS.$(CONFIG)) $(MIDLFLAGS.*) ;
		on * flags += $(MIDLFLAGS.$(CONFIG)) $(MIDLFLAGS.*) ;

		flags += /tlb $(tlbFile:T) /h $(hFile:T) /iid $(iidFile:T) ;
		if proxy in $(OPTIONS)
		{
			flags += /proxy $(proxyFile:T) ;
		}

		FLAGS on $(targets) = $(flags) ;
	}
	else
	{
		targets += $(hFile) $(iidFile) ;
		if proxy in $(OPTIONS)
		{
			targets += $(proxyFile) ;
		}
		MakeLocate $(targets) : $(CWD) ;
		flags += /h \"$(hFile:T)\" /iid \"$(iidFile:T)\" ;
		FLAGS on $(targets) = $(flags) ;
	}

	Clean clean:$(PARENT) : $(targets) ;

	return $(targets) ;
}

rule MidlCompiler PARENT : SOURCE
{
	PARENT = [ _retrieveActiveTargetName $(PARENT) ] ;
	local grist = $(PARENT) ;

	SOURCE = $(SOURCE:G=$(grist)) ;
	SearchSource $(SOURCE) ;

	local targets = [ MidlFlags $(PARENT) : $(SOURCE) ] ;

	Depends $(targets) : $(SOURCE) ;

	Midl $(targets) : $(SOURCE) ;

	return $(targets) ;
}


actions Midl
{
	set PATH=$(MSVCBIN);$(MSVCNT_PATH);%PATH%
	set INCLUDE=$(MSSDK_STDHDRS:J=;);%INCLUDE%
	"$(MIDL)" $(FLAGS) /out $(1[1]:D) $(2)
}

} else {

rule MidlCompiler
{
}

rule MidlFlags
{
}

}
