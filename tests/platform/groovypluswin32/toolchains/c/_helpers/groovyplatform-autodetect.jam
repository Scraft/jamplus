rule C.AutoDetect {
	if $(NT) {
		local PATHS =
			c:/mingw
			d:/mingw
		;

		local gcc = [ Glob $(PATHS)/bin : gcc.exe ] ;
		if ! $(gcc)
		{
			return ;
		}

		GROOVY_ROOT = [ Match (.+)/bin : $(gcc[1]) ] ;
	} else {
		GROOVY_ROOT = /usr ;
	}

	if ! $(GROOVY_ROOT) {
		return ;
	}

	C.COMPILER = groovycompiler ;

	C.COMPILER_SUITE = groovycompiler ;
	C.COMPILER_SUITE_SYMBOL = !c.$(C.ACTIVE_TOOLCHAIN_GRIST).info! ;

	C.ToolchainHelperOnce groovycompiler ;

	{
		local SUFOBJ = .o ;
		SUFEXE on $(C.COMPILER_SUITE_SYMBOL) = .exe ;
		SUFLIB on $(C.COMPILER_SUITE_SYMBOL) = .a ;
		SUFLINKLIBS on $(C.COMPILER_SUITE_SYMBOL) = .a ;
		SUFOBJ on $(C.COMPILER_SUITE_SYMBOL) = $(SUFOBJ) ;

		NOARSCAN on $(C.COMPILER_SUITE_SYMBOL) = true ;
		NOARUPDATE on $(C.COMPILER_SUITE_SYMBOL) = true ;

		C.BUILD_EXTENSIONS on $(C.COMPILER_SUITE_SYMBOL) = $(SUFOBJ) ;
		C.AddBuildExtensions CC : .c .s : C.groovycompiler.CC : $(SUFOBJ) "" : 1 1 0 : 1 ;
		C.AddBuildExtensions C++ : .cc .cpp .cxx : C.groovycompiler.C++ : $(SUFOBJ) "" : 1 0 1 : 1 ;

		C.Defines * : GROOVY ;

		C.Flags * : CC	: -x c ;
		C.Flags * : C++	: -x c++ ;
		C.Flags * : M	: -x objective-c ;
		C.Flags * : MM	: -x objective-c++ ;

		C.AR on $(C.COMPILER_SUITE_SYMBOL)   	= "$(GROOVY_ROOT)/bin/ar" ru ;
		C.CC on $(C.COMPILER_SUITE_SYMBOL)   	= "$(GROOVY_ROOT)/bin/gcc" ;
		C.C++ on $(C.COMPILER_SUITE_SYMBOL)  	= "$(GROOVY_ROOT)/bin/g++" ;
		C.LINK on $(C.COMPILER_SUITE_SYMBOL) 	= "$(GROOVY_ROOT)/bin/g++" ;
		C.RANLIB on $(C.COMPILER_SUITE_SYMBOL)  = "$(GROOVY_ROOT)/bin/ranlib" ;

		C._MultiCppCompile_SetupFlags on $(C.COMPILER_SUITE_SYMBOL) = C.groovycompiler._MultiCppCompile_SetupFlags ;
	}

	return $(C.COMPILER) ;
}
